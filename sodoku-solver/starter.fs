module starter

let v = [
  [0; 0; 1];[0; 1; 7];[0; 2; 0];[0; 3; 5];[0; 4; 0];[0; 5; 0];[0; 6; 6];[0; 7; 8];[0; 8; 0];
  [1; 0; 3];[1; 1; 5];[1; 2; 2];[1; 3; 0];[1; 4; 0];[1; 5; 8];[1; 6; 1];[1; 7; 0];[1; 8; 7];
  [2; 0; 0];[2; 1; 4];[2; 2; 0];[2; 3; 1];[2; 4; 0];[2; 5; 7];[2; 6; 0];[2; 7; 0];[2; 8; 9];
  [3; 0; 0];[3; 1; 0];[3; 2; 0];[3; 3; 4];[3; 4; 0];[3; 5; 0];[3; 6; 2];[3; 7; 9];[3; 8; 0];
  [4; 0; 0];[4; 1; 0];[4; 2; 6];[4; 3; 0];[4; 4; 5];[4; 5; 0];[4; 6; 8];[4; 7; 0];[4; 8; 0];
  [5; 0; 0];[5; 1; 9];[5; 2; 1];[5; 3; 0];[5; 4; 0];[5; 5; 6];[5; 6; 0];[5; 7; 0];[5; 8; 0];
  [6; 0; 5];[6; 1; 0];[6; 2; 0];[6; 3; 9];[6; 4; 0];[6; 5; 4];[6; 6; 0];[6; 7; 6];[6; 8; 0];
  [7; 0; 8];[7; 1; 0];[7; 2; 4];[7; 3; 7];[7; 4; 0];[7; 5; 0];[7; 6; 9];[7; 7; 3];[7; 8; 5];
  [8; 0; 0];[8; 1; 2];[8; 2; 7];[8; 3; 0];[8; 4; 0];[8; 5; 5];[8; 6; 0];[8; 7; 1];[8; 8; 8];]

//let input = ".................85.7.1..2...........3...6.....9..523..6...3.1...18...54.4.69...7"
//let input = ".94...13..............76..2.8..1.....32.........2...6.....5.4.......8..7..63.4..8"
let input = "17.5..68.352..81.7.4.1.7..9...4..29...6.5.8...91..6...5..9.4.6.8.47..935.27..5.18"

open System
open sodokusolver
let result = (solve.findAnswers (List.ofSeq (parser.parse input)))
//printfn "%A" result
printer.print result 

//monad.addThreeNumbersImperitive()
monad.addThreeNumbersBind()
